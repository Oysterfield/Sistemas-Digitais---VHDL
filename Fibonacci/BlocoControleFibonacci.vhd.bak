library ieee;
use ieee.std_logic_1164.all
entity BlocoControle is
	port(clock, reset: in std_logic;
		-- controle externo
		iniciar: in std_logic;
		pronto: out std_logic;
		-- controle interno
		sttNleq2, sttI1eqN: in std_logic;
		cmdI3, cmdIinc, cmdPrin1, cmdPrimSeg,
		cmdSeg1, cmdSegSoma, cmdSomaPrimPlusSeg: out std_logic
	);
	
end entity;

architecture comportamental of BlocoControle is
	type State is (L01, L02, L03, L04, L05, L06, L07, L08, L09,
						L10, L11, L12, L13)
	signal currentState, nextState: State;
begin
	-- logico de proximo estado
	process(currentState, iniciar, sttNleq2, sttI1eqN) is
	begin
		nextState <= currentState;
		case currentState is
			when L01 =>
				if iniciar='1' then
					nextState <= L02;
				end if;
			when L02 =>
				if sttNleq2='1' then
					nextState <= L03;
				else
					nextState <= L04;
			end if;
			when L03 =>
				nextState <= ;
			when L04 =>
				nextState <= ;
			when L05 =>
				nextState <= ;
			when L06 =>
				nextState <= ;
			when L07 =>
				nextState <= ;
			when L08 =>
				nextState <= ;
			when L09 =>
				nextState <= ;
			when L10 =>
				nextState <= ;
			when L11 =>
				nextState <= ;
			when L11 =>
				nextState <= ;
			when L12 =>
				nextState <= ;
			when L13 =>
				nextState <= ;
	-- registrador D (elemento de memoria ou estado interno)
	process (clock, reset) is
	begin
		if reset='1'
			currentState <= L01;
		elsif rising_edge(clock) then
			currentState <= nextState;
		end if;
	end process;
	-- logica de saida
	cmdI3 <= '1' when currentState=L04 else '0';
	cmdIinc <= '1' when currentState=L12 else '0';
	-- completar...